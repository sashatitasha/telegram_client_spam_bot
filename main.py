import logging
import sqlite3
from datetime import datetime
from aiogram.types import ContentType
from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

API_TOKEN = 'API_TOKEN'
logging.basicConfig(level=logging.INFO)

x = False
admins = [""]

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('chat_ids.db')
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS chat_ids
                  (chat_id INTEGER PRIMARY KEY)''')

conn.commit()

y = False


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start_listening


@dp.message_handler(commands=['start_listening'])
async def start_listening_command(message: types.Message):
    add_chat_to_database(message.chat.id)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ω–∞—á–∏–Ω–∞—é —Å–ª—É—à–∞—Ç—å"
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
    await bot.delete_message(message.chat.id, message.message_id)


# –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(Command("add_admin"))
async def process_broadcast_command(message: types.Message):
    global y
    global admins
    if (message.from_user.username in admins):
        y = True
        await message.reply(
            "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞. \n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: nickname \n–ë–ï–ó –ó–ù–ê–ß–ö–ê @")
    else:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏


@dp.message_handler(lambda message: message.reply_to_message and message.reply_to_message.text ==
                                    "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞. \n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: nickname \n–ë–ï–ó –ó–ù–ê–ß–ö–ê @")
async def process_message_for_broadcast(msg: types.Message):
    global y

    if (y and msg.text not in admins):
        new_admin = msg.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø–∞ string
        admins.append(new_admin)
        await bot.send_message(msg.chat.id,
                               f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–æ–º: {new_admin} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞.")
        y = False
    elif (msg.text in admins):
        await bot.send_message(msg.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–æ–º: {msg.text} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.")
    else:
        await bot.send_message(msg.chat.id,
                               "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add_admin")
        y = False


# –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@dp.message_handler(Command("help"))
async def process_broadcast_command(message: types.Message):
    CHAT_ID = message.chat.id

    global x
    global admins
    if (message.from_user.username in admins):
        await message.reply(
            "/help - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n/send_to_all - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º —á–∞—Ç–∞–º\n/add_admin - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞\n/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n/start_listening - –∞–∫—Ç–∏–≤–∞—Ü–∏—è –±–æ—Ç–∞ –¥–ª—è —á–∞—Ç–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏")
    else:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è chat_id –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö


def add_chat_to_database(chat_id):
    conn = sqlite3.connect('chat_ids.db')
    c = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π chat_id –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    c.execute("SELECT * FROM chat_ids WHERE chat_id = ?", (chat_id,))
    existing_chat = c.fetchone()

    if not existing_chat:
        # –ï—Å–ª–∏ chat_id –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        c.execute("INSERT INTO chat_ids (chat_id) VALUES (?)", (chat_id,))
        conn.commit()

    conn.close()


#    conn = sqlite3.connect('chat_ids.db')  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#    c = conn.cursor()
#    c.execute("INSERT INTO chat_ids (chat_id) VALUES (?)",
#              (chat_id,))  # –î–æ–±–∞–≤–ª—è–µ–º chat_id –≤ —Ç–∞–±–ª–∏—Ü—É
#    conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
#    conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def greet_new_members(message: types.Message):
    add_chat_to_database(message.chat.id)

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    button_yes = KeyboardButton("–î–∞ üê∂")
    keyboard.add(button_yes)

    new_members = message.new_chat_members
    for member in new_members:
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º (—ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω—ã–º, –Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)
        if member.username in admins:
            continue

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        await bot.send_message(message.chat.id,
                               f"{member.mention} \n{member.first_name}, –¥–æ—Ä–æ–≥–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å —Å–æ–±–∞–∫–∏, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–±–æ—á–∏–π —á–∞—Ç –®–∫–æ–ª—ã –¥–æ–±—Ä–æ–π –∫–∏–Ω–æ–ª–æ–≥–∏–∏! "
                               "\n \n–ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –æ–±—É—á–µ–Ω–∏—è –∏ —É—Ç–æ—á–Ω–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. "
                               "–¢–∞–∫–∂–µ –∑–¥–µ—Å—å –º—ã –±—É–¥–µ–º –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, "
                               "–∞ –≤—ã ‚Äî –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏‚úåÔ∏è \n \n–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å "
                               "–ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∑–∞–Ω—è—Ç–∏—è–º?", reply_markup=keyboard)


@dp.message_handler(Command("start"))
async def start(message: types.Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö SQLite
    chat_id = message.chat.id
    cursor.execute(
        'INSERT OR IGNORE INTO chat_ids (chat_id) VALUES (?)', (chat_id,))
    conn.commit()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–î–ê"
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    button_yes = KeyboardButton("–î–∞ üê∂")
    keyboard.add(button_yes)

    await message.answer("–î–æ—Ä–æ–≥–æ–π —Ä–æ–¥–∏—Ç–µ–ª—å —Å–æ–±–∞–∫–∏, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–±–æ—á–∏–π —á–∞—Ç –®–∫–æ–ª—ã –¥–æ–±—Ä–æ–π –∫–∏–Ω–æ–ª–æ–≥–∏–∏! "
                         "\n \n–ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –æ–±—É—á–µ–Ω–∏—è –∏ —É—Ç–æ—á–Ω–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã. "
                         "–¢–∞–∫–∂–µ –∑–¥–µ—Å—å –º—ã –±—É–¥–µ–º –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, "
                         "–∞ –≤—ã ‚Äî –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏‚úåÔ∏è \n \n–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å "
                         "–ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∑–∞–Ω—è—Ç–∏—è–º?", reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "–î–∞ üê∂")
async def ask_online(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–û–ù–õ–ê–ô–ù" –∏ "–û–§–õ–ê–ô–ù"
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    button_online = KeyboardButton("–û—á–Ω–∞—è üë•")
    button_offline = KeyboardButton("–û–Ω–ª–∞–π–Ω üë®‚Äçüíª")
    keyboard.add(button_online, button_offline)

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –∫–∞–∫—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã: –æ—á–Ω–∞—è/–æ–Ω–ª–∞–π–Ω?",
                         reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "–û—á–Ω–∞—è üë•")
async def ask_online(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—á–Ω–∞—è"
    await bot.send_photo(message.chat.id, photo="https://ibb.co/4W7h1yK", reply_markup=ReplyKeyboardRemove())
    await bot.send_message(message.chat.id,
                           "–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º –ø–∏—Ç–æ–º—Ü–µ, –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –≤–∞—Å –∏ –æ–ø–∏—à–∏—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç.\n\n–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–Ω—è—Ç–∏–µ –ø—Ä–æ—à–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ –∏ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å. \n\n–ü–æ–ø–æ–ª–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω–∏ –Ω–µ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π.")


@dp.message_handler(lambda message: message.text == "–û–Ω–ª–∞–π–Ω üë®‚Äçüíª")
async def ask_online(message: types.Message):
    await bot.send_photo(message.chat.id, photo="https://ibb.co/q1nYGMf", reply_markup=ReplyKeyboardRemove())
    await bot.send_message(message.chat.id,
                           "–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º –ø–∏—Ç–æ–º—Ü–µ, –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –≤–∞—Å –∏ –æ–ø–∏—à–∏—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç.\n\n–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–Ω—è—Ç–∏–µ –ø—Ä–æ—à–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ –∏ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–±—ã–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å. \n\n–ü–æ–ø–æ–ª–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω–∏ –Ω–µ –∑–∞–∫–æ–Ω—á–∞—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π.")


# –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@dp.message_handler(Command("send_to_all"))
async def process_broadcast_command(message: types.Message):
    global x
    global admins
    if (message.from_user.username in admins):
        x = True
        await message.reply(
            "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. \n–í–ù–ò–ú–ê–ù–ò–ï! —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –í–°–ï–ú —á–∞—Ç–∞–º, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç –±–æ—Ç\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞–ø–∏—Å–∞–≤: 1")
    else:
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏


@dp.message_handler(
    lambda message: message.reply_to_message and message.reply_to_message.text == "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. \n–í–ù–ò–ú–ê–ù–ò–ï! —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –í–°–ï–ú —á–∞—Ç–∞–º, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç –±–æ—Ç\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞–ø–∏—Å–∞–≤: 1",
    content_types=['photo', 'text'])
async def process_message_for_broadcast(msg: types.Message):
    global x

    if (x and msg.photo):
        photo = msg.photo[-1]
        file_id = photo.file_id
        cursor.execute('SELECT chat_id FROM chat_ids')
        rows = cursor.fetchall()

        for row in rows:
            chatid = row[0]
            await bot.send_photo(chatid, file_id, caption=msg.caption)

        await bot.send_message(msg.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        x = False
    elif (x and msg.text != "1"):
        message_to_broadcast = msg.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø–∞ string
        cursor.execute('SELECT chat_id FROM chat_ids')
        rows = cursor.fetchall()
        for row in rows:
            chatid = row[0]
            try:
                await bot.send_message(chatid, message_to_broadcast)
            except Exception as e:
                continue
        await bot.send_message(msg.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        x = False
    elif (msg.text == "1"):
        await bot.send_message(msg.chat.id, "–û—Ç–º–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏.")
        x = False
    else:
        await bot.send_message(msg.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /send_to_all")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
